import numpy as np
import pandas as pd

data = pd.read_csv("play_tennis.csv")
data
data.drop(["day"], axis=1, inplace=True)
data

def naive_bayes_predict(data, target_name, test_instance):
    target_value_counts = data[target_name].value_counts().to_dict()
    print("Target value counts")
    print(target_value_counts)
    
    # Calculates the frequency with which each target value occurs in the data
    #proba_target_values = (data["play"].value_counts()/data.shape[0]).to_dict()
    proba_target_values = (data[data.columns[data.shape[1] - 1]].value_counts()/data.shape[0]).to_dict()
    
    print("Proba_target_values")
    print(proba_target_values)
    
    # Initialize dictionary to store output probabilities against all (unique) target values
    predicted_target_values = {}

    # Iterate through each of the target value to calculate the probability against it
    for target, value_count in target_value_counts.items():
        attrib_proba_given_target_proba = 1
        
        
        # Filters the data set against target value
        data_subset = data[data[target_name] == target]
        
        # Calculates product of probabilities for each attribute
        # in test instance given probability of the target
        for attrib, value in test_instance.items():
            attrib_value_conditional_proba = data_subset[data_subset[attrib] == value].shape[0] / data_subset.shape[0]
            attrib_proba_given_target_proba *= attrib_value_conditional_proba
        
        # Calculates probailities of test instance attributes for a given target probability,
        # and stores it in a dictionary for later reference
        target_value_proba = proba_target_values[target] * attrib_proba_given_target_proba       
        predicted_target_values[target] = target_value_proba
        
    return predicted_target_values

test_instance = {"outlook": "Sunny", "temp": "Cool", "humidity": "High", "wind": "Strong"}
prediction = naive_bayes_predict(data.copy(), data.columns[data.shape[1] - 1], test_instance)
print("Prediction is:",prediction)

